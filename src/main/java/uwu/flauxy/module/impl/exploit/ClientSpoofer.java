package uwu.flauxy.module.impl.exploit;

import io.netty.buffer.Unpooled;
import net.minecraft.client.ClientBrandRetriever;
import net.minecraft.client.Minecraft;
import net.minecraft.network.PacketBuffer;
import net.minecraft.network.play.client.C17PacketCustomPayload;
import uwu.flauxy.event.Event;
import uwu.flauxy.event.impl.EventSendPacket;
import uwu.flauxy.event.impl.EventUpdate;
import uwu.flauxy.module.Category;
import uwu.flauxy.module.Module;
import uwu.flauxy.module.ModuleInfo;
import uwu.flauxy.module.setting.impl.ModeSetting;

@ModuleInfo(name = "ClientSpoofer", displayName = "Client Spoofer", key = -1, cat = Category.Exploit)
public class ClientSpoofer extends Module {

    ModeSetting clients = new ModeSetting("Brand", "Flauxy", "Flauxy", "Lunar", "Lunar Random", "CheatBreaker");
    public String spoofed_brand = "vanilla";

    public ClientSpoofer(){
        addSetting(clients);
    }

    @Override
    public void onEnable() {
        Minecraft.getMinecraft().getPlayerUsageSnooper().addStatToSnooper("client_brand", ClientBrandRetriever.getClientModName());
    }

    @Override
    public void onDisable() {
        spoofed_brand = "vanilla";
        ClientBrandRetriever.setClientModName(spoofed_brand);
    }

    @Override
    public void onEvent(Event e) {
        if(e instanceof EventUpdate){
            switch (clients.getMode()){
                default:{
                    spoofed_brand = clients.getMode();
                    break;
                }
                case "CheatBreaker":{
                    spoofed_brand = "CB";
                    break;
                }
                case "Lunar Random":{
                    spoofed_brand = "lunarclient:v2.12.3-2351";
                    break;
                }
            }
        }
        if(e instanceof EventSendPacket){
            ClientBrandRetriever.setClientModName(spoofed_brand);
            EventSendPacket eventSendPacket = (EventSendPacket) e;
            if(eventSendPacket.getPacket() instanceof C17PacketCustomPayload){
                C17PacketCustomPayload payload = (C17PacketCustomPayload) eventSendPacket.getPacket();
                if(payload.channel.equalsIgnoreCase("MC|Brand")){
                    //eventSendPacket.setPacket(new C17PacketCustomPayload("MC|Brand", payload.getBufferData().writeString(spoofed_brand)));
                }
            }
        }
    }
}
