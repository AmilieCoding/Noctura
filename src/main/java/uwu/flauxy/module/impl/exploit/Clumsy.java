package uwu.flauxy.module.impl.exploit;

import net.minecraft.network.Packet;
import uwu.flauxy.event.Event;
import uwu.flauxy.event.impl.EventFrame;
import uwu.flauxy.event.impl.EventReceivePacket;
import uwu.flauxy.event.impl.EventSendPacket;
import uwu.flauxy.event.impl.EventUpdate;
import uwu.flauxy.module.Category;
import uwu.flauxy.module.Module;
import uwu.flauxy.module.ModuleInfo;
import uwu.flauxy.module.setting.impl.NumberSetting;
import uwu.flauxy.utils.PacketUtil;
import uwu.flauxy.utils.timer.Timer;

import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.HashMap;

@ModuleInfo(name = "Clumsy", key = -1, cat = Category.Exploit, displayName = "Clumsy")
public class Clumsy extends Module {

    public ArrayList<Packet> queuedPackets = new ArrayList<>();

    public NumberSetting delay = new NumberSetting("Delay",150, 0, 15000,250);

    public Clumsy(){
        addSettings(delay);
    }

    private Timer timer = new Timer();

    @Override
    public void onEvent(Event e) {
/*
        if(e instanceof EventReceivePacket){
            EventReceivePacket er = (EventReceivePacket)e;
            e.setCancelled(timer.hasTimeElapsed(delay.getValue(),true) && mc.thePlayer.ticksExisted > 10);
        }
        if(e instanceof EventSendPacket){
            EventSendPacket er = (EventSendPacket)e;
            queuedPackets.add(er.getPacket());
            e.setCancelled(true);
        }
        if(e instanceof EventFrame){
            if(mc.thePlayer == null || mc.thePlayer.ticksExisted < 10 || mc.theWorld == null) return;
        }
        if(e instanceof EventUpdate){
            if(timer.hasTimeElapsed(delay.getValue(),true)){
                try{
                    queuedPackets.forEach(PacketUtil::packetNoEvent);
                    queuedPackets.clear();
                }catch (ConcurrentModificationException ea){
                    ea.printStackTrace();
                }
            }
        }
 */
    }
}
